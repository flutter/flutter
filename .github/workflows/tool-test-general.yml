name: Tool tests general - experiment

on:
  pull_request:
    branches: [master]
    paths:
      - '.github/workflows/tool-test-general.yml'
      - 'dev/**'
      - 'packages/flutter_tools/**'
      - 'bin/**'
      - '.ci.yaml'
      - 'engine/**'
      - 'DEPS'
  push:
    branches: [master]

env:
  ANDROID_TOOLS_VERSION: 13114758
  ANDROID_PLATFORM: android-36
  ANDROID_BUILDTOOLS: 36.0.0

jobs:
  Linux_tool-tests-general:
    permissions:
      contents: read

    runs-on: ubuntu-latest

    steps:
      # Real checkout on github actions for pull requests
      - name: Checkout code (non-act pull_request)
        uses: actions/checkout@v4
        if: github.event_name == 'pull_request' && !env.ACT
        with:
          fetch-depth: 0
          fetch-tags: true
          # Checkout the PR; not the merge commit - we need to describe tags
          ref: ${{ github.event.pull_request.head.sha }}

      # Real checkout on github actions for post submit
      - name: Checkout code (non-act push)
        uses: actions/checkout@v4
        if: github.event_name == 'push' && !env.ACT
        with:
          fetch-depth: 0
          fetch-tags: true
          # Checkout the PR; not the merge commit - we need to describe tags
          ref: ${{ github.event.pull_request.head.sha }}

      # Fake checkout if running locally
      - name: Checkout code (act local)
        uses: actions/checkout@v4
        if: env.ACT

      # If this is a branch / pr NOT on fluter/flutter, set the remote upstream
      # so the flutter tool can figure out the version
      - name: Set upstream (if not flutter/flutter)
        if: github.repository != 'flutter/flutter' && !env.ACT
        run: |
          git remote add upstream https://github.com/flutter/flutter.git
          git fetch --all --tags

      # If running locally; install the JDK - Github runners have everything on them
      - name: Set up our JDK environment
        if: env.ACT
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00
        with:
          java-version: '21'
          distribution: 'temurin'

      # If running locally; install Android SDK tools - Github runners have everything on them
      - name: Get Android SDK version
        id: android-sdk-version
        if: env.ACT
        run: |
          echo "revision=${{env.ANDROID_TOOLS_VERSION}};${{env.ANDROID_PLATFORM}};build-tools;${{env.ANDROID_BUILDTOOLS}}" >> "$GITHUB_OUTPUT"
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        id: android-sdk-setup
        if: env.ACT
        with:
          path: /root/.android/sdk
          key: ${{ runner.os }}-${{ steps.android-sdk-version.outputs.revision }}
      - name: Setup Android SDK (cold cache)
        if: env.ACT && steps.android-sdk-setup.outputs.cache-hit != 'true'
        uses: android-actions/setup-android@9fc6c4e9069bf8d3d10b2204b1fb8f6ef7065407
        with:
          packages: 'tools platform-tools platforms;${{env.ANDROID_PLATFORM}} build-tools;${{env.ANDROID_BUILDTOOLS}}'
          log-accepted-android-sdk-licenses: false
          cmdline-tools-version: ${{ env.ANDROID_TOOLS_VERSION }}
      - name: Setup Android SDK (warm cache)
        if: env.ACT && steps.android-sdk-setup.outputs.cache-hit == 'true'
        run: |
          echo "ANDROID_SDK_ROOT=/root/.android/sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=/root/.android/sdk" >> $GITHUB_ENV
          echo "/root/.android/sdk/cmdline-tools/${{ env.ANDROID_TOOLS_VERSION }}/bin" >> "$GITHUB_PATH"
          echo "/root/.android/sdk/platform-tools" >> "$GITHUB_PATH"

      - name: Add `flutter` to the PATH
        run: |
          echo "$GITHUB_WORKSPACE/bin" >> "$GITHUB_PATH"

      # Get the Flutter revision. This is the key for the cache for artifacts
      # under bin/cache
      - name: Get Flutter version
        id: flutter-revision
        run: |
          echo "revision=$(git -C ${{ github.workspace }} rev-parse HEAD)" >> "$GITHUB_OUTPUT"
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        id: flutter-artifacts
        with:
          path: ${{ github.workspace }}/bin/cache
          key: ${{ runner.os }}-${{ steps.flutter-revision.outputs.revision }}

      - name: pub deps hash
        id: pub-deps-hash
        run: |
          # Find all 'pubspec.yaml' files and sort them by their full path.
          find dev examples packages -name "pubspec.yaml" -print0 | sort -z | while IFS= read -r -d $'\0' file; do
            # Concatenate the content of each file.
            cat "$file"
          done | sha256sum >> "$RUNNER_TEMP/pub_deps_sha"
          echo "revision=$(cat "$RUNNER_TEMP/pub_deps_sha")" >> "$GITHUB_OUTPUT"
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        id: pub-cache
        with:
          path: |
            /root/.pub-cache
            ${{ github.workspace }}/**/.dart_tool
            ${{ github.workspace }}/**/pubspec.lock
          key: ${{ runner.os }}-pub-${{ steps.pub-deps-hash.outputs.revision }}

      - name: Flutter Doctor
        run: |
          flutter doctor

      - name: update-packages (online)
        if: steps.pub-cache.outputs.cache-hit != 'true'
        run: |
          flutter update-packages

      - name: Tool Test
        run: |
          SHARD=tool_tests SUBSHARD=general dart --enable-asserts dev/bots/test.dart
